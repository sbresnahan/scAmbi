// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_overdisp_block_improved
List compute_overdisp_block_improved(S4 boot_sparse, int start_col, int end_col, int n_boot, int n_genes, double eps, double pseudocount);
RcppExport SEXP _scAmbi_compute_overdisp_block_improved(SEXP boot_sparseSEXP, SEXP start_colSEXP, SEXP end_colSEXP, SEXP n_bootSEXP, SEXP n_genesSEXP, SEXP epsSEXP, SEXP pseudocountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type boot_sparse(boot_sparseSEXP);
    Rcpp::traits::input_parameter< int >::type start_col(start_colSEXP);
    Rcpp::traits::input_parameter< int >::type end_col(end_colSEXP);
    Rcpp::traits::input_parameter< int >::type n_boot(n_bootSEXP);
    Rcpp::traits::input_parameter< int >::type n_genes(n_genesSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type pseudocount(pseudocountSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_overdisp_block_improved(boot_sparse, start_col, end_col, n_boot, n_genes, eps, pseudocount));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scAmbi_compute_overdisp_block_improved", (DL_FUNC) &_scAmbi_compute_overdisp_block_improved, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_scAmbi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
